name: Build ThunderLibraries on Linux

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:

jobs:
  Thunder:
    uses: rdkcentral/Thunder/.github/workflows/Build Thunder on Linux.yml@master

  ThunderLibraries:
    needs: Thunder

    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]

    name: Build type - ${{matrix.build_type}}
    steps:
    - name: Install necessary packages
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: |
          sudo gem install apt-spy2
          sudo apt-spy2 fix --commit --launchpad --country=US
          sudo apt-get update
          sudo apt install python3-pip
          pip install jsonref
          sudo apt install build-essential cmake ninja-build libusb-1.0-0-dev zlib1g-dev libssl-dev

    - name: Checkout Thunder
      uses: actions/checkout@v3
      with:
        path: Thunder
        repository: rdkcentral/Thunder

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: Thunder-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}

    - name: Unpack files
      run: |
        tar -xvzf ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz
        rm ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz

    - name: Checkout ThunderLibraries
      uses: actions/checkout@v3
      with:
        path: ThunderLibraries
        repository: ${{github.repository_owner}}/ThunderLibraries

    - name: Regex ThunderLibraries
      if: contains(github.event.pull_request.body, '[Options:')
      id: libs
      uses: AsasInnab/regex-action@v1
      with:
        regex_pattern: '(?<=\[Options:).*(?=\])'
        regex_flags: 'gim'
        search_string: ${{github.event.pull_request.body}}

    - name: Build ThunderLibraries
      run: |
        cmake -G Ninja -S ThunderLibraries -B ${{matrix.build_type}}/build/ThunderLibraries \
        -DCMAKE_INSTALL_PREFIX="${{matrix.build_type}}/install/usr" \
        -DCMAKE_MODULE_PATH="${PWD}/${{matrix.build_type}}/install/usr/include/WPEFramework/Modules" \
        -DBROADCAST=ON \
        ${{steps.libs.outputs.first_match}}
        cmake --build ${{matrix.build_type}}/build/ThunderLibraries --target install

    - name: Tar files
      run: tar -czvf ${{matrix.build_type}}.tar.gz ${{matrix.build_type}}

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ThunderLibraries-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}.tar.gz
